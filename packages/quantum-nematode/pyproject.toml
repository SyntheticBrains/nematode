[project]
name = "quantum-nematode"
version = "1.0.0"
description = "Quantum brain simulation of a nematode (C. elegans) using variational quantum circuits"
readme = "../../README.md"
license = { text = "Apache-2.0" }
authors = []
maintainers = []
requires-python = ">=3.12,<3.13"
keywords = [
    "quantum",
    "machine-learning",
    "nematode",
    "c-elegans",
    "simulation",
    "qiskit",
    "quantum-circuits",
    "variational-quantum-eigensolver",
    "quantum-reinforcement-learning",
    "parameter-shift-rule",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Private :: Do Not Upload",
]
dependencies = [
    "qiskit>=1.0.0,<2.0.0",
    "matplotlib>=3.10.1",
    "ipykernel>=6.29.5",
    "numpy>=2.2.4",
    "pydantic>=2.11.4",
    "python-dotenv>=1.1.1",
    "rich>=13.0.0",
]

[project.urls]
Homepage = "https://github.com/SyntheticBrains/nematode"
Repository = "https://github.com/SyntheticBrains/nematode"
Documentation = "https://github.com/SyntheticBrains/nematode#readme"
Issues = "https://github.com/SyntheticBrains/nematode/issues"

[project.optional-dependencies]
cpu = [
  "qiskit-aer>=0.17.0",
]
gpu = [
  "qiskit-aer-gpu>=0.15.1",
]
torch = [
  "torch>=2.7.0",
]
qpu = [
  "qiskit-ibm-runtime>=0.40.1",
  "qiskit-ibm-catalog>=0.9.0",
]

[tool.uv]
conflicts = [
    [
      { extra = "cpu" },
      { extra = "gpu" },
    ],
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["quantumnematode"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--strict-markers",
    "--strict-config",
    "--cov=quantumnematode",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-report=html",
]

[tool.coverage.run]
source = ["quantumnematode"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.xml]
output = "coverage.xml"

[tool.coverage.html]
directory = "htmlcov"
